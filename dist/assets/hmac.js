import{aN as d,aO as u,aP as H,aQ as l,aR as o,aH as p}from"./main.js";class r extends d{constructor(t,i){super(),this.finished=!1,this.destroyed=!1,u(t);const h=H(i);if(this.iHash=t.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const n=this.blockLen,s=new Uint8Array(n);s.set(h.length>n?t.create().update(h).digest():h);for(let e=0;e<s.length;e++)s[e]^=54;this.iHash.update(s),this.oHash=t.create();for(let e=0;e<s.length;e++)s[e]^=106;this.oHash.update(s),l(s)}update(t){return o(this),this.iHash.update(t),this}digestInto(t){o(this),p(t,this.outputLen),this.finished=!0,this.iHash.digestInto(t),this.oHash.update(t),this.oHash.digestInto(t),this.destroy()}digest(){const t=new Uint8Array(this.oHash.outputLen);return this.digestInto(t),t}_cloneInto(t){t||(t=Object.create(Object.getPrototypeOf(this),{}));const{oHash:i,iHash:h,finished:n,destroyed:s,blockLen:e,outputLen:c}=this;return t=t,t.finished=n,t.destroyed=s,t.blockLen=e,t.outputLen=c,t.oHash=i._cloneInto(t.oHash),t.iHash=h._cloneInto(t.iHash),t}clone(){return this._cloneInto()}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const y=(a,t,i)=>new r(a,t).update(i).digest();y.create=(a,t)=>new r(a,t);export{y as h};
